{% if python_package_manager == "PDM" %}
[project]
name = "{{project_name}}"
version = "{{project_version}}"
description = "{{project_description}}"
authors = [
    {name = "{{author_name}}", email = "{{author_email}}"},
]
dependencies = []
requires-python = "{{python_version}}"
readme = "README.md"
license = {text = "{{project_license}}"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "scm"
path = "src/{{project_name}}/__init__.py"

[tool.pdm.dev-dependencies]
dev = [
    "Commitizen>=3.28.0",
    "mypy>=1.11.0",
    "pdbpp>=0.10.3",
    "pytest-coverage>=0.0",
    "pytest-dependency>=0.6.0",
    "pytest>=8.3.1",
]

{% elif python_package_manager == "Poetry" %}
[tool.poetry]
name = "{{project_name}}"
version = "{{project_version}}"
description = "{{project_description}}"
authors = ["{{author_name}} <{{author_email}}>"]
readme = "README.md"
license = "{{project_license}}"
packages = [
  { include = "{{project_name}}", from = "src" },
]

[tool.poetry.dependencies]
python = "{{python_version}}"

[tool.poetry.group.dev.dependencies]
commitizen = "^3.29.0"
pdbpp = "^0.10.3"
mypy = "^1.11.0"
pytest-coverage = "^0.0"
pytest-dependency = "^0.6.0"
pytest = "^8.3.1"
{% endif %}

[tool.commitizen]
version = "1.0.0"
update_changelog_on_bump = true
version_provider = "scm"
tag_format = "v$major.$minor.$patch$prerelease"
version_files = [
    "src/{{project_name}}/__init__.py"
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "UP", # pyupgrade
  "D"   # pydocstyle
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.coverage.run]
branch = true
relative_files = true
source = [
    "src/{{ project_name }}",
]

[tool.coverage.report]
skip_empty = true
